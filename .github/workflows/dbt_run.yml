name: dbt Run on Push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows manual trigger
  workflow_dispatch:
  # Optional: automatic nightly schedule (after Snowflake task runs at 02:00 UTC)
  schedule:
    - cron: "20 2 * * *"   # Runs daily at 02:20 UTC

jobs:
  run-dbt:
    runs-on: ubuntu-latest
    steps:
      #  Checkout the repository
      - uses: actions/checkout@v4

      #  Setup Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      #  Install dbt for Snowflake
      - name: Install dbt-snowflake
        run: pip install dbt-snowflake

      #  Create dbt profile dynamically using GitHub secrets
      - name: Create profiles directory and file
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml << EOF
          leap_case:
            target: dev
            outputs:
              dev:
                type: snowflake
                account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
                user: ${{ secrets.SNOWFLAKE_USER }}
                password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                role: ${{ secrets.SNOWFLAKE_ROLE }}
                database: ${{ secrets.SNOWFLAKE_DATABASE }}
                warehouse: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
                schema: ${{ secrets.SNOWFLAKE_SCHEMA }}
                threads: 4
                client_session_keep_alive: false
          EOF

      #  Install required dbt packages
      - name: Install dbt dependencies
        run: dbt deps --profiles-dir ~/.dbt

      #  Verify Snowflake connection
      - name: Verify dbt connection
        run: dbt debug --profiles-dir ~/.dbt

      #  Run STAGING models first
      - name: Build staging models
        run: dbt run --select staging --profiles-dir ~/.dbt

      #  Run SCD2 snapshots (history tracking)
      - name: Run dbt snapshots
        run: dbt snapshot --profiles-dir ~/.dbt

      #  Run transformations (dimensions, facts, analytics)
      #     Includes a "smart fallback" â€” full-refresh if tables donâ€™t exist yet.
      - name: Run dbt transformations and analytics
        run: |
          echo " Running dbt transformations..."
          dbt run --full-refresh --profiles-dir ~/.dbt || dbt run --profiles-dir ~/.dbt

      #  Run dbt tests (validations)
      - name: Run dbt tests
        run: dbt test --profiles-dir ~/.dbt

      #  Optional: Generate and upload dbt docs (for lineage + model visualization)
      - name: Generate dbt docs
        if: success()
        run: |
          dbt docs generate --profiles-dir ~/.dbt
          echo "ðŸ“˜ dbt documentation generated successfully."
